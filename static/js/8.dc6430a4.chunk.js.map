{"version":3,"sources":["components/pages/SinglePage.js","components/skeleton/Skeleton.js","utils/setContent.js"],"names":["SinglePage","Component","dataType","id","useParams","useState","data","setData","useMarvelService","getComic","clearError","getCharacter","process","setProcess","useEffect","updateData","then","onDataLoaded","setContent","Skeleton","className","Spinner","ErrorMessage","Error"],"mappings":"mKA+CeA,UAxCI,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACrBC,EAAOC,cAAPD,GACR,EAAwBE,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoEC,cAA5DC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAAYC,EAA9B,EAA8BA,aAAcC,EAA5C,EAA4CA,QAASC,EAArD,EAAqDA,WAErDC,qBAAU,WACNC,MAED,CAACZ,IAEJ,IAAMY,EAAa,WAGf,OAFAL,IAEQR,GACJ,IAAK,QACD,OAAOO,EAASN,GACXa,KAAKC,GACLD,MAAK,kBAAMH,EAAW,gBAC/B,IAAK,YACD,OAAOF,EAAaR,GACfa,KAAKC,GACLD,MAAK,kBAAMH,EAAW,kBAMjCI,EAAe,SAACX,GAClBC,EAAQD,IAGZ,OACI,qCACI,cAAC,IAAD,IACCY,YAAWN,EAASX,EAAWK,Q,iDCtB7Ba,EAjBE,WACb,OACI,qCACI,mBAAGC,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,iC,gBCOhBF,IAfI,SAACN,EAASX,EAAWK,GACpC,OAAQM,GACJ,IAAK,UACD,OAAO,cAAC,EAAD,IACX,IAAK,UACD,OAAO,cAACS,EAAA,EAAD,IACX,IAAK,YACD,OAAO,cAACpB,EAAD,CAAWK,KAAMA,IAC5B,IAAK,QACD,OAAO,cAACgB,EAAA,EAAD,IACX,QACI,MAAM,IAAIC,MAAM,+B","file":"static/js/8.dc6430a4.chunk.js","sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport useMarvelService from './../../services/MarvelService';\r\n\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport setContent from './../../utils/setContent';\r\n\r\nconst SinglePage = ({ Component, dataType }) => {\r\n    const { id } = useParams();\r\n    const [data, setData] = useState(null);\r\n    const { getComic, clearError, getCharacter, process, setProcess } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateData();\r\n        // eslint-disable-next-line\r\n    }, [id]);\r\n\r\n    const updateData = () => {\r\n        clearError();\r\n\r\n        switch (dataType) {\r\n            case 'comic':\r\n                return getComic(id)\r\n                    .then(onDataLoaded)\r\n                    .then(() => setProcess('confirmed'))\r\n            case 'character':\r\n                return getCharacter(id)\r\n                    .then(onDataLoaded)\r\n                    .then(() => setProcess('confirmed'))\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const onDataLoaded = (data) => {\r\n        setData(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            {setContent(process, Component, data)}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default SinglePage;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import Skeleton from './../components/skeleton/Skeleton';\r\nimport Spinner from './../components/spinner/Spinner';\r\nimport ErrorMessage from './../components/errorMessage/ErrorMessage';\r\n\r\n\r\nconst setContent = (process, Component, data) => {\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Skeleton />;\r\n        case 'loading':\r\n            return <Spinner />;\r\n        case 'confirmed':\r\n            return <Component data={data} />;\r\n        case 'error':\r\n            return <ErrorMessage />;\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nexport default setContent;"],"sourceRoot":""}